// Generated by view binder compiler. Do not edit!
package com.example.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import com.example.ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CartitemlayoutBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView cardProductName;

  @NonNull
  public final TextView cardProductPrice;

  @NonNull
  public final TextView cardProductQuantity;

  private CartitemlayoutBinding(@NonNull CardView rootView, @NonNull TextView cardProductName,
      @NonNull TextView cardProductPrice, @NonNull TextView cardProductQuantity) {
    this.rootView = rootView;
    this.cardProductName = cardProductName;
    this.cardProductPrice = cardProductPrice;
    this.cardProductQuantity = cardProductQuantity;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CartitemlayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CartitemlayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.cartitemlayout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CartitemlayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_product_name;
      TextView cardProductName = rootView.findViewById(id);
      if (cardProductName == null) {
        break missingId;
      }

      id = R.id.card_product_price;
      TextView cardProductPrice = rootView.findViewById(id);
      if (cardProductPrice == null) {
        break missingId;
      }

      id = R.id.card_product_quantity;
      TextView cardProductQuantity = rootView.findViewById(id);
      if (cardProductQuantity == null) {
        break missingId;
      }

      return new CartitemlayoutBinding((CardView) rootView, cardProductName, cardProductPrice,
          cardProductQuantity);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
